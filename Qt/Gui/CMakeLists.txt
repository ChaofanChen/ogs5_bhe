# Source files
set( SOURCES
	main.cpp
	mainwindow.cpp
)

# Moc Header files
set( MOC_HEADERS
	mainwindow.h
)

# Header files
set( HEADERS

)

# UI files
set( UIS
	mainwindow.ui
)


# Run Qts user interface compiler uic on .ui files
qt4_wrap_ui( UI_HEADERS ${UIS} )

# Run Qts meta object compiler moc on header files
qt4_wrap_cpp( MOC_SOURCES ${MOC_HEADERS} )

# Include the headers which are generated by uic and moc
# and include additional header
include_directories(
	${CMAKE_BINARY_DIR}/Qt/Base
	${CMAKE_BINARY_DIR}/Qt/Gui
	${CMAKE_BINARY_DIR}/Qt/DataView
	${CMAKE_BINARY_DIR}/Qt/StationView
	${CMAKE_BINARY_DIR}/Qt/StratView
	${CMAKE_BINARY_DIR}/Qt/VtkVis
	../../Base
	../../MathLib
	../Base
	../DataView
	../../GEO
	../../FileIO
	../../MSH
	../../FEM
	../StationView
	../StratView
	../VtkVis
	#${OpenSG_INCLUDE_DIR}
	#${OpenSGSupportlibs_INCLUDE_DIR}
	${Shapelib_INCLUDE_DIR}	
)

if (OGS_COMPILE_QVTK)
	include_directories(${CMAKE_BINARY_DIR}/Qt/QVTK ../QVTK)
endif (OGS_COMPILE_QVTK)

# Put moc files in a project folder
source_group("UI Files" REGULAR_EXPRESSION "\\w*\\.ui")
source_group("Moc Files" REGULAR_EXPRESSION "moc_.*")


# Create the library
add_executable( ogs-gui
	${SOURCES}
	${HEADERS}
	${MOC_HEADERS}
	${MOC_SOURCES}
	${UIS}
)

# Link Qt library
target_link_libraries( ogs-gui
	${QT_LIBRARIES}
	#Base
	GEO
	FileIO
	MSH
	FEM
	OGSProject
	QtBase
	QtDataView
	StationView
	StratView
	${Shapelib_LIBRARIES}
	${libtiff_LIBRARIES}
	${libgeotiff_LIBRARIES}
	QVTK
	VtkVis
	#${OpenSG_LIBRARIES}
	#${OpenSGSupportlibs_LIBRARIES}
)

add_dependencies ( ogs-gui VtkVis OGSProject )

# Set linker flags
IF(MSVC)
	SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRT")
ENDIF(MSVC)

### Installation ###
install (TARGETS ogs-gui RUNTIME DESTINATION bin COMPONENT ogs_gui)

include(GetPrerequisites)
if (EXISTS ${CMAKE_BINARY_DIR}/bin/Release/ogs-gui.exe)
	get_prerequisites(@CMAKE_BINARY_DIR@/bin/Release/ogs-gui.exe OGS_GUI_DEPENDENCIES 1 1 "" "")
	message (STATUS "ogs-gui depends on ${OGS_GUI_DEPENDENCIES}")
	foreach(DEPENDENCY ${OGS_GUI_DEPENDENCIES})
		gp_resolve_item ("/" "${DEPENDENCY}" ${CMAKE_BINARY_DIR}/bin/Release/ogs-gui.exe "/" DEPENDENCY_PATH)
		set (DEPENDENCY_PATHS ${DEPENDENCY_PATHS} ${DEPENDENCY_PATH})
	endforeach (DEPENDENCY IN ${OGS_GUI_DEPENDENCIES})
	install (FILES ${DEPENDENCY_PATHS} DESTINATION bin COMPONENT ogs_gui)
endif (EXISTS ${CMAKE_BINARY_DIR}/bin/Release/ogs-gui.exe)
